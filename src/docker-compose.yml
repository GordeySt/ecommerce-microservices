version: '3.4'

services:
  basketdb:
    container_name: basketdb
    image: mongo
    restart: always
    ports:
      - 27017:27017
    volumes:
      - mongo_data:/data/db

  rediscache:
    container_name: rediscache
    image: redis:alpine
    restart: always
    ports:
      - 6379:6379

  identitydb:
    container_name: identitydb
    image: postgres
    environment: 
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin1234
      - POSTGRES_DB=IdentityDb
    restart: always
    ports:
      - 5420:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data/

  identitygrpc:
    container_name: identitygrpc
    build:
      context: .
      dockerfile: Services/Identity/Identity.Grpc/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=docker
    depends_on:
      - identitydb
    ports:
      - 8001:80

  identityserver:
    container_name: identityserver
    build:
      context: .
      dockerfile: Services/Identity/Identity.API/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=docker
      - ASPNETCORE_URLS=https://+:443
      - ASPNETCORE_HTTPS_PORT=8011
      - ASPNETCORE_Kestrel__Certificates__Default__Password=Fumezo73
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
    depends_on:
      - identitydb
    ports:
      - 8011:443
    volumes:
      - ~/.aspnet/https:/https:ro

  catalog.api: 
    container_name: catalog.api
    build: 
      context: .
      dockerfile: Services/Catalog/Catalog.API/Dockerfile
    environment:
       - ASPNETCORE_ENVIRONMENT=docker
    depends_on:
      - rediscache
      - identityserver
      - identitygrpc
    ports:
      - 8000:80

      
  basket.api:
    container_name: basket.api
    build:
      context: .
      dockerfile: Services/Basket/Basket.API/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=docker
    depends_on:
      - basketdb
      - rediscache
      - identityserver
    ports:
      - 8002:80

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@test.com
      - PGADMIN_DEFAULT_PASSWORD=admin1234
    restart: always
    ports:
      - 5050:80
    volumes:
      - pgadmin_data:/root/.pgadmin

  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.2
    environment:
        - xpack.monitoring.enabled=true
        - xpack.watcher.enabled=false
        - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
        - discovery.type=single-node
    ports:
        - 9200:9200
    volumes:
        - elasticsearch-data:/usr/share/elasticsearch/data

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.9.2
    environment:
        - ELASTICSEARCH_URL=http://elasticsearch:9200
    depends_on:
        - elasticsearch
    ports:
        - 5601:5601

  webstatus:
    container_name: webstatus
    build:
      context: .
      dockerfile: WebApps/WebStatus/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - HealthChecksUI__HealthChecks__0__Name=Catalog Health Check
      - HealthChecksUI__HealthChecks__0__Uri=http://catalog.api/hc
    ports:
      - 8007:80

  ocelotapigateway:
    container_name: ocelotapigateway
    build:
      context: .
      dockerfile: ApiGateways/OcelotApiGateway/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=docker
    depends_on:
      - catalog.api
      - basket.api
      - identity.api
    ports:
      - 8015:80

volumes:
  mongo_data:
  elasticsearch-data:
  postgres_data:
  pgadmin_data:


