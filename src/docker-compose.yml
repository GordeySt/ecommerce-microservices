version: '3.4'

services:
  catalogdb:
    container_name: catalogdb
    image: mongo
    restart: always
    ports:
      - 27017:27017
    volumes:
      - mongo_data:/data/db

  catalog.api: 
    container_name: catalog.api
    image: ${DOCKER_REGISTRY-}catalogapi
    build: 
      context: .
      dockerfile: Services/Catalog/Catalog.API/Dockerfile
    environment:
       - ASPNETCORE_ENVIRONMENT=docker
    depends_on:
      - catalogdb
    ports:
      - 8000:80

  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.2
    environment:
        - xpack.monitoring.enabled=true
        - xpack.watcher.enabled=false
        - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
        - discovery.type=single-node
    ports:
        - 9200:9200
    volumes:
        - elasticsearch-data:/usr/share/elasticsearch/data

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.9.2
    environment:
        - ELASTICSEARCH_URL=http://elasticsearch:9200
    depends_on:
        - elasticsearch
    ports:
        - 5601:5601

  webstatus:
    container_name: webstatus
    image: ${DOCKER_REGISTRY-}webstatus
    build:
      context: .
      dockerfile: WebApps/WebStatus/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - HealthChecksUI__HealthChecks__0__Name=Catalog Health Check
      - HealthChecksUI__HealthChecks__0__Uri=http://catalog.api/hc
    ports:
      - 8007:80

volumes:
  mongo_data:
  elasticsearch-data:
