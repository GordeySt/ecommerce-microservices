<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Catalog.API</name>
    </assembly>
    <members>
        <member name="M:Catalog.API.PL.Controllers.CatalogController.GetPopularCategories(System.Int32)">
            <summary>
            Gets the most popular categories of products
            </summary>
            <remarks>
            Sample request:
            
                GET /api/get-popular?popularCategoriesCount=2
            
            </remarks>
            <param name="popularCategoriesCount">Count of the popular categories</param>
            <returns>Returns PagedList of ProductDto</returns>
            <response code="200">Success</response>
        </member>
        <member name="M:Catalog.API.PL.Controllers.CatalogController.GetProducts(Catalog.API.PL.Models.Params.ProductsParams)">
            <summary>
            Gets the paginated list of products
            </summary>
            <remarks>
            Sample request:
            
                GET /api/Catalog?pageNumber=4&amp;pageSize=4
            
            </remarks>
            <param name="productsParams"></param>
            <returns>Returns PagedList of ProductDto</returns>
            <response code="200">Success</response>
        </member>
        <member name="M:Catalog.API.PL.Controllers.CatalogController.GetProductById(System.Guid)">
            <summary>
            Gets the product by id
            </summary>
            <remarks>
            Sample request:
            
                GET /api/Catalog/e0c40c25-52f7-48df-91fc-441dadca0a0f
            
            </remarks>
            <param name="id">Note id (guid)</param>
            <returns>Returns ProductDto</returns>
            <response code="200">Success</response>
            <response code="404">If the product not found</response>
        </member>
        <member name="M:Catalog.API.PL.Controllers.CatalogController.CreateProduct(Catalog.API.PL.Models.DTOs.Products.CreateProductDto)">
            <summary>
            Creates the product
            </summary>
            <remarks>
            Sample request:
            
                POST /api/Catalog
                { 
                    name: "f",
                    category: "Computers",
                    summary: "Summary",
                    description: "Description",
                    price: 54.93 
                }
            
            </remarks>
            <param name="createProductDto">CreateProductDto object</param>
            <returns>Returns CreatedAtAction with CreateProductDto object</returns>
            <response code="201">Success</response>
        </member>
        <member name="M:Catalog.API.PL.Controllers.CatalogController.UpdateProduct(Catalog.API.PL.Models.DTOs.Products.UpdateProductDto)">
            <summary>
            Updates the product
            </summary>
            <remarks>
            Sample request:
            
                PUT /api/Catalog
                { 
                    id: "0e39f30d-4754-48c0-8191-755f673e2269"
                    name: "f",
                    category: "Computers",
                    summary: "Summary",
                    description: "Description",
                    price: 54.93 
                }
            
            </remarks>
            <param name="updateProductDto">UpdateProductDto object</param>
            <returns>Returns NoContent Result</returns>
            <response code="204">Success</response>
            <response code="404">If the product not found</response>
        </member>
        <member name="M:Catalog.API.PL.Controllers.CatalogController.DeleteProduct(System.Guid)">
            <summary>
            Deletes the product by id
            </summary>
            <remarks>
            Sample request:
            
                DELETE /api/Catalog/dba6469d-db47-4b57-b1d0-2b0f0a9a06d9
                
            </remarks>
            <param name="id">id of the product (guid)</param>
            <returns>Return NoContent Result</returns>
            <response code="204">Success</response>
            <response code="404">If the product not found</response>
        </member>
        <member name="M:Catalog.API.PL.Controllers.CatalogController.AddPhotoToProduct(Microsoft.AspNetCore.Http.IFormFile,System.Guid)">
            <summary>
            Add photo to the product by productId
            </summary>
            <remarks>
            Sample request:
            
                POST /api/Catalog/0e39f30d-4754-48c0-8191-755f673e2269/AddPhotoToCategory
                
            </remarks>
            <param name="mainImage">Image file (IFormFile)</param>
            <param name="id">id of the product to add photo (guid)</param>
            <returns>Returns NoContent Result</returns>
            <response code="204">Success</response>
            <response code="404">If the product with id (guid) not found</response>
        </member>
        <member name="M:Catalog.API.PL.Controllers.ProductRatingsController.AddRatingToProduct(System.Guid,System.Int32)">
            <summary>
            Rate product
            </summary>
            <remarks>
            Sample request:
            
                GET /api/add-ratings/id/e0c40c25-52f7-48df-91fc-441dadca0a0f
            
            </remarks>
            <param name="id">Product Id (guid)</param>
            <param name="ratingCount">Rating Count</param>
            <returns>Returns NoContent Object Result</returns>
            <response code="200">Success</response>
            <response code="400">If rating already exists</response>
            <response code="404">If product rating not found (user or product not found)</response>
        </member>
        <member name="M:Catalog.API.PL.Controllers.ProductRatingsController.ChangeRatingAtProduct(System.Guid,System.Int32)">
            <summary>
            Update product rating
            </summary>
            <remarks>
            Sample request:
            
                GET /api/change-ratings/id/e0c40c25-52f7-48df-91fc-441dadca0a0f
            
            </remarks>
            <param name="id">Product Id (guid)</param>
            <param name="ratingCount">Rating Count</param>
            <returns>Returns NoContent Object Result</returns>
            <response code="200">Success</response>
            <response code="404">If product rating not found (user or product not found)</response>
        </member>
        <member name="P:Catalog.API.PL.Models.DTOs.Products.CreateProductDto.Name">
            <summary>
            Name of the product
            </summary>
            <example>IPhone X</example>
        </member>
        <member name="P:Catalog.API.PL.Models.DTOs.Products.CreateProductDto.Description">
            <summary>
            Description of the product
            </summary>
            <example>Tim Cooks child</example>
        </member>
        <member name="P:Catalog.API.PL.Models.DTOs.Products.CreateProductDto.Summary">
            <summary>
            Summary about the product
            </summary>
            <example>New Smart Phone</example>
        </member>
        <member name="P:Catalog.API.PL.Models.DTOs.Products.CreateProductDto.Category">
            <summary>
            Category of the product
            </summary>
            <example>Smart Phones</example>
        </member>
        <member name="P:Catalog.API.PL.Models.DTOs.Products.CreateProductDto.Price">
            <summary>
            Price of the product
            </summary>
            <example>60</example>
        </member>
        <member name="P:Catalog.API.PL.Models.DTOs.Products.CreateProductDto.AgeRating">
            <summary>
            Age Rating of the product
            </summary>
            <example>6</example>
        </member>
        <member name="P:Catalog.API.PL.Models.DTOs.Products.CreateProductDto.Count">
            <summary>
            Count of the product
            </summary>
            <example>10</example>
        </member>
        <member name="P:Catalog.API.PL.Models.DTOs.Products.ProductDto.Id">
            <summary>
            Id (guid) of the product
            </summary>
            <example>0e39f30d-4754-48c0-8191-755f673e2269</example>
        </member>
        <member name="P:Catalog.API.PL.Models.DTOs.Products.ProductDto.Name">
            <summary>
            Name of the product
            </summary>
            <example>IPhone X</example>
        </member>
        <member name="P:Catalog.API.PL.Models.DTOs.Products.ProductDto.Category">
            <summary>
            Category of the product
            </summary>
            <example>Smart Phones</example>
        </member>
        <member name="P:Catalog.API.PL.Models.DTOs.Products.ProductDto.Summary">
            <summary>
            Summary about the product
            </summary>
            <example>New Smart Phone</example>
        </member>
        <member name="P:Catalog.API.PL.Models.DTOs.Products.ProductDto.Description">
            <summary>
            Description of the product
            </summary>
            <example>Tim Cooks child</example>
        </member>
        <member name="P:Catalog.API.PL.Models.DTOs.Products.ProductDto.MainImageUrl">
            <summary>
            Url from the cloud for the proudct main image
            </summary>
            <example>https://res.cloudinary.com/student-gordey/image/upload/v1626446506/alclnjzmwf3pqcizvfrb.jpg</example>
        </member>
        <member name="P:Catalog.API.PL.Models.DTOs.Products.ProductDto.Price">
            <summary>
            Price of the product
            </summary>
            <example>60</example>
        </member>
        <member name="P:Catalog.API.PL.Models.DTOs.Products.ProductDto.AgeRating">
            <summary>
            Age Rating of the product
            </summary>
            <example>6</example>
        </member>
        <member name="P:Catalog.API.PL.Models.DTOs.Products.ProductDto.Count">
            <summary>
            Count of the product
            </summary>
            <example>10</example>
        </member>
        <member name="P:Catalog.API.PL.Models.DTOs.Products.ProductDto.TotalRating">
            <summary>
            Total Rating of the product
            </summary>
            <example>10</example>
        </member>
        <member name="P:Catalog.API.PL.Models.DTOs.Products.UpdateProductDto.Id">
            <summary>
            Id (guid) of the product
            </summary>
            <example>0e39f30d-4754-48c0-8191-755f673e2269</example>
        </member>
        <member name="P:Catalog.API.PL.Models.DTOs.Products.UpdateProductDto.Name">
            <summary>
            Name of the product
            </summary>
            <example>IPhone X</example>
        </member>
        <member name="P:Catalog.API.PL.Models.DTOs.Products.UpdateProductDto.Description">
            <summary>
            Description of the product
            </summary>
            <example>Tim Cooks child</example>
        </member>
        <member name="P:Catalog.API.PL.Models.DTOs.Products.UpdateProductDto.Summary">
            <summary>
            Summary about the product
            </summary>
            <example>New Smart Phone</example>
        </member>
        <member name="P:Catalog.API.PL.Models.DTOs.Products.UpdateProductDto.Category">
            <summary>
            Category of the product
            </summary>
            <example>Smart Phones</example>
        </member>
        <member name="P:Catalog.API.PL.Models.DTOs.Products.UpdateProductDto.Price">
            <summary>
            Price of the product
            </summary>
            <example>60</example>
        </member>
        <member name="P:Catalog.API.PL.Models.DTOs.Products.UpdateProductDto.AgeRating">
            <summary>
            Age Rating of the product
            </summary>
            <example>6</example>
        </member>
        <member name="P:Catalog.API.PL.Models.DTOs.Products.UpdateProductDto.Count">
            <summary>
            Count of the product
            </summary>
            <example>10</example>
        </member>
        <member name="T:Identity.Grpc.Protos.UserReflection">
            <summary>Holder for reflection information generated from user.proto</summary>
        </member>
        <member name="P:Identity.Grpc.Protos.UserReflection.Descriptor">
            <summary>File descriptor for user.proto</summary>
        </member>
        <member name="F:Identity.Grpc.Protos.GetUserByIdRequest.IdFieldNumber">
            <summary>Field number for the "id" field.</summary>
        </member>
        <member name="F:Identity.Grpc.Protos.ApplicationUserModel.IdFieldNumber">
            <summary>Field number for the "id" field.</summary>
        </member>
        <member name="F:Identity.Grpc.Protos.ApplicationUserModel.UserNameFieldNumber">
            <summary>Field number for the "userName" field.</summary>
        </member>
        <member name="P:Identity.Grpc.Protos.UserProtoService.Descriptor">
            <summary>Service descriptor</summary>
        </member>
        <member name="T:Identity.Grpc.Protos.UserProtoService.UserProtoServiceClient">
            <summary>Client for UserProtoService</summary>
        </member>
        <member name="M:Identity.Grpc.Protos.UserProtoService.UserProtoServiceClient.#ctor(Grpc.Core.ChannelBase)">
            <summary>Creates a new client for UserProtoService</summary>
            <param name="channel">The channel to use to make remote calls.</param>
        </member>
        <member name="M:Identity.Grpc.Protos.UserProtoService.UserProtoServiceClient.#ctor(Grpc.Core.CallInvoker)">
            <summary>Creates a new client for UserProtoService that uses a custom <c>CallInvoker</c>.</summary>
            <param name="callInvoker">The callInvoker to use to make remote calls.</param>
        </member>
        <member name="M:Identity.Grpc.Protos.UserProtoService.UserProtoServiceClient.#ctor">
            <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
        </member>
        <member name="M:Identity.Grpc.Protos.UserProtoService.UserProtoServiceClient.#ctor(Grpc.Core.ClientBase.ClientBaseConfiguration)">
            <summary>Protected constructor to allow creation of configured clients.</summary>
            <param name="configuration">The client configuration.</param>
        </member>
        <member name="M:Identity.Grpc.Protos.UserProtoService.UserProtoServiceClient.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)">
            <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
        </member>
    </members>
</doc>
